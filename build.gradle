buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'application'
    id 'jacoco'
    id "org.jlleitschuh.gradle.ktlint" version "10.1.0"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['dev/danielwright/main/ApplicationKt*'])
        }))
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

group 'dev.danielwright'
version '0.0.1-SNAPSHOT'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main']
    test.kotlin.srcDirs = test.java.srcDirs = ['src/test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = 11
compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-mock:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"

    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-ktor:$koin_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "io.insert-koin:koin-test-junit5:$koin_version"

    testImplementation "io.kotest:kotest-runner-junit5:${kotest_version}"
    testImplementation "io.kotest:kotest-assertions-core:${kotest_version}"
    testImplementation "io.kotest:kotest-property:${kotest_version}"
    testImplementation "io.kotest.extensions:kotest-extensions-koin:1.0.0"
    testImplementation "io.kotest.extensions:kotest-assertions-ktor:1.0.3"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotest_version"

    testImplementation "io.mockk:mockk:1.12.0"

    implementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.0-RC1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.0-RC1"

    implementation 'org.hibernate.validator:hibernate-validator:7.0.0.Final'
    implementation group: 'org.glassfish', name: 'jakarta.el', version: '4.0.1'

    implementation 'com.sksamuel.hoplite:hoplite-core:1.4.3'
    implementation 'com.sksamuel.hoplite:hoplite-hocon:1.4.3'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.3'
}
